import wixData from "wix-data";

export async function getAllTasks(visitorId) {
  try {
    const results = await wixData.query("TodoList").eq("studentId", visitorId).find();
    console.log("Length of item is: ", results.length);
    return results.items;
  } catch (error) {
    console.error(error);
  }
}

export async function insertTask(taskObj) {
  try {
    await wixData.insert("TodoList", taskObj);
  } catch (error) {
    console.error(error);
  }
}

export async function updateTask(task, newStatus) {
  try {
    const toUpdate = {
      ...task,
      isComplete: newStatus,
    };
    await wixData.update("TodoList", toUpdate);
  } catch (error) {
    console.error(error);
  }
}

// this function is different from the previous ones as it returns a promise
// this is done in order to allow calling it several times without waiting to each call to complete
export async function removeTask(taskID) {
  try {
    const removePromise = wixData.remove("TodoList", taskID);
    return removePromise;
  } catch (error) {
    console.error(error);
  }
}


export async function getGroup() {
  const MultiRefer = await wixData.query("Student").include("Group-8").find();
  console.log(MultiRefer);
  
  return MultiRefer;
}

export async function getStudentGroup(email) {
  const MultiRefer = await wixData.query("Student")
                                  .eq('email', email)
                                  .include("Group-8")
                                  .find();
  console.log(MultiRefer);
  
  return MultiRefer;
}

export async function increaseGroupReport(email) {
  try {
    const queryResult = await wixData.query("Student")
      .eq('email', email)
      .include("Group-8")
      .find();

    const student = queryResult.items[0];
    const groupId = student['Group-8'][0]._id;
    const updatedCount = student['Group-8'][0].reportCount + 1;

    // 값을 증가시키기 위해 update() 메서드 사용
    const updatedGroup = await wixData.update('Group-8', groupId, {
      reportCount: updatedCount
    });

    console.log('Increased Group Report:', updatedGroup);
    return updatedGroup;
  } catch (error) {
    console.error('Error increasing group report:', error);
  }
}

